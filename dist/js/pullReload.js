var slide=function(t){function n(t){if(v.scrollTop<=0&&!o){var e="undefined"==typeof event?t:event;o=!0,i=!0,n=l?e.touches[0].pageY:e.pageY,p.setTransition(0),c.innerHTML='<span class="flip"></span>下拉加载数据 ...'}return!1}function e(t){if(v.scrollTop<=0&&i){var e="undefined"==typeof event?t:event;a=l?e.touches[0].pageY:e.pageY,n<a&&(e.preventDefault(),p.setTransition(0),(a-n-u)/2<=150?(s=(a-n-u)/2,p.translate(s)):(s+=.3,p.translate(s)))}}function a(e){i&&(i=!1,a-n>=u?(p.setTransition(1),p.translate(0),c.innerHTML='<span class="loadingIcon"></span>正在加载数据 ...',"function"==typeof t.next&&t.next.call(p,e)):p.back())}var n,a,s,o=!1,i=!1,r=/hp-tablet/gi.test(navigator.appVersion),l="ontouchstart"in window&&!r,d=document.querySelector(t.container),c=d.firstElementChild,u=c.clientHeight,v=d.parentElement,p={translate:function(t){d.style.webkitTransform="translate3d(0,"+t+"px,0)",d.style.transform="translate3d(0,"+t+"px,0)"},setTransition:function(t){d.style.webkitTransition="all "+t+"s",d.style.transition="all "+t+"s"},back:function(){p.translate(0-u),o=!1},addEvent:function(t,n,e){t.addEventListener?t.addEventListener(n,e,!1):t.attachEvent?t.attachEvent("on"+n,e):t["on"+n]=e}};p.translate(0-u),p.addEvent(d,"touchstart",n),p.addEvent(d,"touchmove",e),p.addEvent(d,"touchend",a),p.addEvent(d,"mousedown",n),p.addEvent(d,"mousemove",e),p.addEvent(d,"mouseup",a)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
